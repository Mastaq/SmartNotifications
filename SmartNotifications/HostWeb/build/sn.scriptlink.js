/// <reference path="_references.ts" />
var SN;
(function (SN) {
    var sod = SP.SOD;
    var SPAsyncScript = (function () {
        function SPAsyncScript(key, src, onLoad) {
            var _this = this;
            this.key = key;
            this.src = src;
            this.onLoad = onLoad;
            this.onLoadFunction = function () {
                if (typeof sod.notifyScriptLoadedAndExecuteWaitingJobs === "function") {
                    sod.notifyScriptLoadedAndExecuteWaitingJobs(_this.key);
                }
                if (_this.onLoad && typeof _this.onLoad === "function") {
                    _this.onLoad();
                }
            };
            this.load = function (sync) {
                if (sync === void 0) { sync = false; }
                sod.loadMultiple([_this.key], _this.onLoadFunction, sync);
            };
            this.registerDependency = function (asyncScripts) {
                asyncScripts.forEach(function (asyncScript) {
                    sod.registerSodDep(_this.key, asyncScript.key);
                });
            };
            this.registerDependencyByName = function (kies) {
                kies.forEach(function (key) {
                    sod.registerSodDep(_this.key, key);
                });
            };
            sod.registerSod(this.key, this.src);
        }
        return SPAsyncScript;
    })();
    SN.SPAsyncScript = SPAsyncScript;
})(SN || (SN = {}));
/// <reference path="_references.ts" />
var SN;
(function (SN) {
    var ScriptLinkViewModel = (function () {
        function ScriptLinkViewModel() {
            var _this = this;
            this.grouppedNotifications = ko.observableArray([]);
            setTimeout(function () {
                var notifications = SN.Notification.getStubNotifications();
                var uniqueColors = [];
                for (var i = 0; i < notifications.length; i++) {
                    if (uniqueColors.indexOf(notifications[i].color) === -1) {
                        uniqueColors.push(notifications[i].color);
                    }
                }
                for (var i = 0; i < uniqueColors.length; i++) {
                    var notificationItem = new SN.NotificationItems();
                    ko.utils.arrayPushAll(notificationItem.notifications, _this.getNotificationsByColor(uniqueColors[i], notifications));
                    notificationItem.notifications.valueHasMutated();
                    notificationItem.key = uniqueColors[i];
                    notificationItem.rgba = _this.hexToRgb(uniqueColors[i]);
                    notificationItem.boxShadow = String.format("0 0 5px {0}", uniqueColors[i]);
                    _this.grouppedNotifications().push(notificationItem);
                }
                _this.grouppedNotifications.valueHasMutated();
            }, 300);
        }
        ScriptLinkViewModel.prototype.showNotifications = function (notification) {
            var el = jQuery("#sn-notify-modal").clone().appendTo("#sn-notify-modal");
            SP.UI.ModalDialog.showModalDialog({
                title: "Notifications",
                html: el[0],
                autoSize: true
            });
            el.show();
            ko.applyBindings(notification, el[0]);
            var dlg = SP.UI.ModalDialog.get_childDialog();
            if (dlg) {
                dlg.autoSize();
            }
        };
        ScriptLinkViewModel.prototype.getNotificationsByColor = function (color, notifications) {
            return notifications.filter(function (notification) {
                return notification.color === color;
            });
        };
        ScriptLinkViewModel.prototype.hexToRgb = function (hex) {
            var bigint = parseInt(hex.substring(1, hex.length), 16);
            var r = (bigint >> 16) & 255;
            var g = (bigint >> 8) & 255;
            var b = bigint & 255;
            return String.format("rgba({0},{1},{2},0.7)", r, g, b);
        };
        return ScriptLinkViewModel;
    })();
    SN.ScriptLinkViewModel = ScriptLinkViewModel;
})(SN || (SN = {}));
/// <reference path="_references.ts" />
var SN;
(function (SN) {
    var NotificationItems = (function () {
        function NotificationItems() {
            this.isHovering = ko.observable(false);
            this.notifications = ko.observableArray([]);
        }
        NotificationItems.prototype.onAfterRender = function (data) {
            for (var i = 0; i < data.notifications().length; i++) {
                data.notifications()[i].active(false);
            }
            var firstNotification = data.notifications()[0];
            firstNotification.active(true);
        };
        NotificationItems.prototype.dismiss = function (notification) {
            var activeNotification = this.getActiveNotification();
            var index = this.notifications.indexOf(activeNotification);
            if (this.notifications().length > 1) {
                this.go("next");
            }
            else {
                SP.UI.ModalDialog.get_childDialog().close(SP.UI.DialogResult.OK);
            }
            this.notifications.splice(index, 1);
            this.notifications.valueHasMutated();
        };
        NotificationItems.prototype.go = function (direction) {
            var activeNotification = this.getActiveNotification();
            direction === "prev" ? this.goPrev(activeNotification) : this.goNext(activeNotification);
            SP.UI.ModalDialog.get_childDialog().autoSize();
        };
        NotificationItems.prototype.goNext = function (activeNotification) {
            var index = this.notifications.indexOf(activeNotification);
            var newIndex = 0;
            if (index !== this.notifications().length - 1) {
                newIndex = index + 1;
            }
            activeNotification.active(false);
            var nextNotification = this.notifications()[newIndex];
            nextNotification.active(true);
        };
        NotificationItems.prototype.goPrev = function (activeNotification) {
            var index = this.notifications.indexOf(activeNotification);
            var newIndex = this.notifications().length - 1;
            if (index !== 0) {
                newIndex = index - 1;
            }
            activeNotification.active(false);
            var nextNotification = this.notifications()[newIndex];
            nextNotification.active(true);
        };
        NotificationItems.prototype.getActiveNotification = function () {
            return this.notifications().filter(function (notification) {
                return notification.active();
            })[0];
        };
        return NotificationItems;
    })();
    SN.NotificationItems = NotificationItems;
})(SN || (SN = {}));
/// <reference path="_references.ts" />
var SN;
(function (SN) {
    SP.SOD.executeOrDelayUntilScriptLoaded(function () {
        ko.bindingHandlers.hover = {
            init: function (element, valueAccessor) {
                var value = valueAccessor();
                ko.applyBindingsToNode(element, {
                    event: {
                        mouseenter: function () { value(true); },
                        mouseleave: function () { value(false); }
                    }
                });
            }
        };
    }, "snknockout");
})(SN || (SN = {}));
/// <reference path="_references.ts" />
var SN;
(function (SN) {
    var Notification = (function () {
        function Notification() {
            this.title = "";
            this.active = ko.observable(false);
        }
        Notification.getStubNotifications = function () {
            var notifications = [];
            var n1 = new Notification();
            n1.color = "#FF0E0E";
            n1.text = "Some super important message";
            n1.dismissable = true;
            n1.title = "Some cool title";
            var n2 = new Notification();
            n2.color = "#0072C6";
            n2.text = "Some super important message";
            n2.dismissable = false;
            var n3 = new Notification();
            n3.color = "#059630";
            n3.text = "Some super important message";
            n3.dismissable = true;
            var n4 = new Notification();
            n4.color = "#680EFF";
            n4.text = "<h1>Some super important message</h1><br><div><b>This message</b> <br> is very important!</div>";
            n4.dismissable = true;
            n4.title = "Really cool title goes here";
            var n5 = new Notification();
            n5.color = "#680EFF";
            n5.text = "<h1>Some super important message</h1><br><div><b>Hello</b> from message</div>";
            n5.dismissable = false;
            var n6 = new Notification();
            n6.color = "#680EFF";
            n6.text = "<h1>WOW</h1><br><div><b>Hello</b> from message</div>";
            n6.dismissable = true;
            var n7 = new Notification();
            n7.color = "#680EFF";
            n7.text = "<h1>Happy birthday!!!!</h1><br><div><b>Hello</b> from message</div>";
            n7.dismissable = true;
            notifications.push(n1, n2, n3, n4, n5, n6, n7);
            return notifications;
        };
        return Notification;
    })();
    SN.Notification = Notification;
})(SN || (SN = {}));
/// <reference path="_references.ts" />
var SN;
(function (SN) {
    (function (window) {
        function onkoLoaded() {
            jQuery.get(_spPageContextInfo.webAbsoluteUrl + "/SmartNotificationsAssets/templates.html")
                .then(function (data) {
                jQuery("body").append("<div style=\"display:none\">" + data + "<\/div>");
                jQuery("#RibbonContainer-TabRowRight").prepend("<div class=\"sn-app-bootstrap\" id=\"sn-app-scriptlink\" data-bind=\"template: {name: 'sn-app-scriptlink-tmpl'}\">hello</div>");
                ko.applyBindings(new SN.ScriptLinkViewModel(), document.getElementById("sn-app-scriptlink"));
            });
        }
        function onjQueryLoaded() {
            if (!window.ko) {
                var koLoader = new SN.SPAsyncScript("snknockout", _spPageContextInfo.webAbsoluteUrl + "/SmartNotificationsAssets/knockout.js", onkoLoaded);
                koLoader.load();
            }
            else {
                onkoLoaded();
            }
        }
        var start = function () {
            SP.SOD.executeOrDelayUntilScriptLoaded(function () {
                if (!window.jQuery) {
                    window.registerCssLink(_spPageContextInfo.webAbsoluteUrl + "/SmartNotificationsAssets/styles.css");
                    var jqLoader = new SN.SPAsyncScript("snjquery", _spPageContextInfo.webAbsoluteUrl + "/SmartNotificationsAssets/jquery.js", onjQueryLoaded);
                    jqLoader.load();
                }
                else {
                    onjQueryLoaded();
                }
            }, "sp.js");
            SP.SOD.loadMultiple(["sp.js"], function () { });
        };
        if (_spBodyOnLoadCalled) {
            start();
        }
        else {
            _spBodyOnLoadFunctions.push(start);
        }
    })(window);
})(SN || (SN = {}));
/// <reference path="../../../typings/tsd.d.ts" />
/// <reference path="SPAsyncScript.ts" />
/// <reference path="ScriptLinkViewModel.ts" />
/// <reference path="NotificationItems.ts" />
/// <reference path="HoverBinding.ts" />
/// <reference path="Notification.ts" />
/// <reference path="Loader.ts" /> 

//# sourceMappingURL=data:application/json;base64,
